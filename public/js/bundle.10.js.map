{"version":3,"sources":["webpack:///./src/client/styles/Session.js","webpack:///./src/client/pages/Authentication/Signup.js","webpack:///./src/client/helpers/reduxState.js"],"names":["SessionStyles","theme","card","overflow","session","position","zIndex","minHeight","display","flexDirection","background","backgroundColor","palette","primary","main","content","padding","concat","spacing","unit","alignItems","justifyContent","flex","textAlign","wrapper","maxWidth","width","margin","avatar","lockscreenWrapper","title","fontSize","lineHeight","fontWeight","color","borderRadius","cursor","&:after","top","left","border","height","pointerEvents","borderColor","borderTopColor","borderWidth","marginLeft","subtitle","fullWidth","withStyles","connect","state","_objectSpread","errors","has","name","validationErrors","fields","Array","isArray","find","field","path","get","fieldError","message","validation","signup","props","classes","_useState2","_slicedToArray","useState","formData","setFormData","useChangeField","e","target","value","undefined","react_default","a","createElement","className","classNames","Card_default","CardContent_default","onSubmit","preventDefault","TextField_default","id","label","textField","error","onChange","FormHelperText_default","type","FormControlLabel_default","control","Checkbox_default","required","Button_default","variant","react_router_dom","to"],"mappings":"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","file":"js/bundle.10.js?version=5b8caa29bd36f1f1826a","sourcesContent":["const SessionStyles = theme => ({\n  card: {\n    overflow: 'visible'\n  },\n  session: {\n    position: 'relative',\n    zIndex: 4000,\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  background: {\n    backgroundColor: theme.palette.primary.main\n  },\n  content: {\n    padding: `40px ${theme.spacing.unit}px`,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: '1 0 auto',\n    flexDirection: 'column',\n    minHeight: '100%',\n    textAlign: 'center'\n  },\n  wrapper: {\n    flex: 'none',\n    maxWidth: '400px',\n    width: '100%',\n    margin: '0 auto'\n  },\n  avatar: {\n    position: 'relative',\n    display: 'block',\n    margin: '-75px auto 0'\n  },\n  lockscreenWrapper: {\n    flex: 'none',\n    maxWidth: '280px',\n    width: '100%',\n    margin: '0 auto',\n  },\n  title: {\n    fontSize: '150px',\n    lineHeight: 1.2,\n    fontWeight: 100,\n    display: 'inline-table',\n    position: 'relative',\n    background: theme.palette.primary.main,\n    color: '#fff',\n    padding: `0 ${theme.spacing.unit * 3}px`,\n    borderRadius: '60px',\n    cursor: 'pointer',\n    margin: `0 0 ${theme.spacing.unit}px`,\n    '&:after': {\n      top: '100%',\n      left: '50%',\n      border: 'solid transparent',\n      content: '\"\"',\n      height: 0,\n      width: 0,\n      position: 'absolute',\n      pointerEvents: 'none',\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderTopColor: theme.palette.primary.main,\n      borderWidth: '8px',\n      marginLeft: '-8px'\n    }\n  },\n  subtitle: {\n    fontSize: '32px',\n    fontWeight: 900\n  },\n  fullWidth: {\n    width: '100%'\n  }\n});\n\nexport default SessionStyles;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {connect} from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles/index';\nimport Card from '@material-ui/core/Card/index';\nimport CardContent from '@material-ui/core/CardContent/index';\nimport Button from '@material-ui/core/Button/index';\nimport FormControlLabel from '@material-ui/core/FormControlLabel/index';\nimport TextField from '@material-ui/core/TextField/index';\nimport FormHelperText from '@material-ui/core/FormHelperText/index';\nimport Checkbox from '@material-ui/core/Checkbox/index';\nimport Typography from '@material-ui/core/Typography/index';\nimport { Link } from 'react-router-dom';\nimport SessionStyles from '../../styles/Session';\nimport {signup} from \"../../ducks/auth\";\nimport {validation} from \"../../helpers/reduxState\";\n\nconst Signup = (props) => {\n  const { classes } = props;\n  const [formData, setFormData] = useState({});\n  const useChangeField = name => e => {\n    formData[name] = !!e.target.value ? e.target.value : undefined;\n    setFormData({ ...formData });\n  };\n\n  return (\n    <div className={classNames(classes.session, classes.background)}>\n      <div className={classes.content}>\n        <div className={classes.wrapper}>\n          <Card>\n            <CardContent>\n              <form onSubmit={e => {\n                e.preventDefault();\n                props.signup(formData);\n              }}>\n                <div className=\"text-xs-center pb-xs\">\n                  {/*<img src=\"/static/images/logo-dark.svg\" alt=\"\"/>*/}\n                </div>\n                <TextField\n                  id=\"name\"\n                  label=\"Name\"\n                  className={classes.textField}\n                  error={props.errors.has('name')}\n                  fullWidth\n                  margin=\"normal\"\n                  onChange={useChangeField('name')}\n                />\n                {props.errors.has('name') && <FormHelperText error={true}>\n                  {props.errors.get('name')}\n                </FormHelperText>}\n                <TextField\n                  id=\"email\"\n                  label=\"Email address\"\n                  className={classes.textField}\n                  error={props.errors.has('email')}\n                  fullWidth\n                  margin=\"normal\"\n                  onChange={useChangeField('email')}\n                />\n                {props.errors.has('email') && <FormHelperText error={true}>\n                  {props.errors.get('email')}\n                </FormHelperText>}\n                <TextField\n                  id=\"password\"\n                  label=\"Password\"\n                  className={classes.textField}\n                  error={props.errors.has('password')}\n                  type=\"password\"\n                  fullWidth\n                  margin=\"normal\"\n                  onChange={useChangeField('password')}\n                />\n                {props.errors.has('password') && <FormHelperText error={true}>\n                  {props.errors.get('password')}\n                </FormHelperText>}\n                <TextField\n                  id=\"cpassword\"\n                  label=\"Confirm Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      value=\"checkedA\"\n                      required\n                    />\n                  }\n                  label=\"I have read and agree to the terms of service.\"\n                  className={classes.fullWidth}\n                />\n                <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">Create your account</Button>\n                <div className=\"pt-1 text-xs-center\">\n                  <Link to=\"/forgot\">\n                    <Button>Forgot password?</Button>\n                  </Link>\n                  &nbsp;&nbsp;&nbsp;&nbsp;\n                  <Link to=\"/signin\">\n                    <Button>Access your account.</Button>\n                  </Link>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nSignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(SessionStyles)(\n  connect(state => ({\n    ...validation(state)\n  }), {\n    signup\n  })(Signup)\n);","export const validation = state => ({\n  errors: {\n    has(name) {\n      if (!state.validationErrors.fields || !Array.isArray(state.validationErrors.fields)) return;\n\n      return !!state.validationErrors.fields.find(field => field.path === name);\n    },\n    get(name) {\n      if (!state.validationErrors.fields || !Array.isArray(state.validationErrors.fields)) return;\n\n      const fieldError = state.validationErrors.fields.find(field => field.path === name);\n\n      if (!fieldError) return;\n\n      return fieldError.message;\n    }\n  }\n});"],"sourceRoot":""}